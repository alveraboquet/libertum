{"version":3,"file":"TradeList.07b4722a.js","sources":["../../node_modules/vue-material-design-icons/CloseBoxMultiple.vue","../../node_modules/vue-material-design-icons/GestureTap.vue","../../src/components/ftbot/TradeActions.vue","../../src/components/ftbot/TradeList.vue"],"sourcesContent":["<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"!title\"\n        :aria-label=\"title\"\n        class=\"material-design-icon close-box-multiple-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M4 20H18V22H4C2.9 22 2 21.11 2 20V6H4V20M20.22 2H7.78C6.8 2 6 2.8 6 3.78V16.22C6 17.2 6.8 18 7.78 18H20.22C21.2 18 22 17.2 22 16.22V3.78C22 2.8 21.2 2 20.22 2M19 13.6L17.6 15L14 11.4L10.4 15L9 13.6L12.6 10L9 6.4L10.4 5L14 8.6L17.6 5L19 6.4L15.4 10L19 13.6Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"CloseBoxMultipleIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","<template>\n  <span v-bind=\"$attrs\"\n        :aria-hidden=\"!title\"\n        :aria-label=\"title\"\n        class=\"material-design-icon gesture-tap-icon\"\n        role=\"img\"\n        @click=\"$emit('click', $event)\">\n    <svg :fill=\"fillColor\"\n         class=\"material-design-icon__svg\"\n         :width=\"size\"\n         :height=\"size\"\n         viewBox=\"0 0 24 24\">\n      <path d=\"M10,9A1,1 0 0,1 11,8A1,1 0 0,1 12,9V13.47L13.21,13.6L18.15,15.79C18.68,16.03 19,16.56 19,17.14V21.5C18.97,22.32 18.32,22.97 17.5,23H11C10.62,23 10.26,22.85 10,22.57L5.1,18.37L5.84,17.6C6.03,17.39 6.3,17.28 6.58,17.28H6.8L10,19V9M11,5A4,4 0 0,1 15,9C15,10.5 14.2,11.77 13,12.46V11.24C13.61,10.69 14,9.89 14,9A3,3 0 0,0 11,6A3,3 0 0,0 8,9C8,9.89 8.39,10.69 9,11.24V12.46C7.8,11.77 7,10.5 7,9A4,4 0 0,1 11,5Z\">\n        <title v-if=\"title\">{{ title }}</title>\n      </path>\n    </svg>\n  </span>\n</template>\n\n<script>\nexport default {\n  name: \"GestureTapIcon\",\n  emits: ['click'],\n  props: {\n    title: {\n      type: String,\n    },\n    fillColor: {\n      type: String,\n      default: \"currentColor\"\n    },\n    size: {\n      type: Number,\n      default: 24\n    }\n  }\n}\n</script>","<template>\n  <div class=\"d-flex flex-column\">\n    <b-button\n      v-if=\"botApiVersion <= 1.1\"\n      class=\"btn-xs text-left\"\n      size=\"sm\"\n      title=\"Forceexit\"\n      @click=\"$emit('forceSell', trade)\"\n    >\n      <ForceSellIcon :size=\"16\" title=\"Forceexit\" class=\"mr-1\" />Forceexit\n    </b-button>\n    <b-button\n      v-if=\"botApiVersion > 1.1\"\n      class=\"btn-xs text-left\"\n      size=\"sm\"\n      title=\"Forceexit limit\"\n      @click=\"$emit('forceSell', trade, 'limit')\"\n    >\n      <ForceSellIcon :size=\"16\" title=\"Forceexit limit\" class=\"mr-1\" />Forceexit limit\n    </b-button>\n    <b-button\n      v-if=\"botApiVersion > 1.1\"\n      class=\"btn-xs text-left mt-1\"\n      size=\"sm\"\n      title=\"Forceexit market\"\n      @click=\"$emit('forceSell', trade, 'market')\"\n    >\n      <ForceSellIcon :size=\"16\" title=\"Forceexit market\" class=\"mr-1\" />Forceexit market\n    </b-button>\n\n    <b-button\n      class=\"btn-xs text-left mt-1\"\n      size=\"sm\"\n      title=\"Delete trade\"\n      @click=\"$emit('deleteTrade', trade)\"\n    >\n      <DeleteIcon :size=\"16\" title=\"Delete trade\" class=\"mr-1\" />\n      Delete\n    </b-button>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { Trade } from '@/types';\nimport { defineComponent } from 'vue';\nimport DeleteIcon from 'vue-material-design-icons/Delete.vue';\nimport ForceSellIcon from 'vue-material-design-icons/CloseBoxMultiple.vue';\n\nexport default defineComponent({\n  name: 'TradeActions',\n  components: { DeleteIcon, ForceSellIcon },\n  props: {\n    botApiVersion: {\n      type: Number,\n      default: 1.0,\n    },\n    trade: {\n      type: Object as () => Trade,\n      required: true,\n    },\n  },\n  emits: ['forceSell', 'deleteTrade'],\n  setup() {\n    return {};\n  },\n});\n</script>\n\n<style scoped lang=\"scss\"></style>\n","<template>\n  <div class=\"h-100 overflow-auto w-100\">\n    <b-table\n      ref=\"tradesTable\"\n      small\n      hover\n      stacked=\"md\"\n      :items=\"trades\"\n      :fields=\"tableFields\"\n      show-empty\n      :empty-text=\"emptyText\"\n      :per-page=\"perPage\"\n      :current-page=\"currentPage\"\n      primary-key=\"botTradeId\"\n      selectable\n      select-mode=\"single\"\n      :filter=\"filterText\"\n      @row-contextmenu=\"handleContextMenuEvent\"\n      @row-clicked=\"onRowClicked\"\n      @row-selected=\"onRowSelected\"\n    >\n      <template #cell(actions)=\"row\">\n        <b-button :id=\"`btn-actions_${row.index}`\" class=\"btn-xs\" size=\"sm\" title=\"Actions\">\n          <ActionIcon :size=\"16\" title=\"Actions\" />\n        </b-button>\n        <b-popover :target=\"`btn-actions_${row.index}`\" triggers=\"focus\" placement=\"left\">\n          <trade-actions\n            :trade=\"row.item\"\n            :bot-api-version=\"botStore.activeBot.botApiVersion\"\n            @deleteTrade=\"removeTradeHandler\"\n            @forceSell=\"forcesellHandler\"\n          />\n        </b-popover>\n      </template>\n      <template #cell(pair)=\"row\">\n        <span>\n          {{\n            `${row.item.pair}${\n              row.item.open_order_id === undefined || row.item.open_order_id === null ? '' : '*'\n            }`\n          }}\n        </span>\n      </template>\n      <template #cell(trade_id)=\"row\">\n        {{ row.item.trade_id }}\n        {{\n          botStore.activeBot.botApiVersion > 2.0 && row.item.trading_mode !== 'spot'\n            ? '| ' + (row.item.is_short ? 'Short' : 'Long')\n            : ''\n        }}\n      </template>\n      <template #cell(profit)=\"row\">\n        <trade-profit :trade=\"row.item\" />\n      </template>\n      <template #cell(open_timestamp)=\"row\">\n        <DateTimeTZ :date=\"row.item.open_timestamp\" />\n      </template>\n      <template #cell(close_timestamp)=\"row\">\n        <DateTimeTZ :date=\"row.item.close_timestamp\" />\n      </template>\n    </b-table>\n    <div class=\"w-100 d-flex justify-content-between\">\n      <b-pagination\n        v-if=\"!activeTrades\"\n        v-model=\"currentPage\"\n        :total-rows=\"rows\"\n        :per-page=\"perPage\"\n        aria-controls=\"my-table\"\n      ></b-pagination>\n      <b-input\n        v-if=\"showFilter\"\n        v-model=\"filterText\"\n        type=\"text\"\n        placeholder=\"Filter\"\n        size=\"sm\"\n        style=\"width: unset\"\n      />\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nimport { formatPercent, formatPrice } from '@/shared/formatters';\nimport { MultiDeletePayload, MultiForcesellPayload, Trade } from '@/types';\nimport ActionIcon from 'vue-material-design-icons/GestureTap.vue';\nimport DateTimeTZ from '@/components/general/DateTimeTZ.vue';\nimport TradeProfit from './TradeProfit.vue';\nimport TradeActions from './TradeActions.vue';\n\nimport { defineComponent, ref, computed, watch, getCurrentInstance } from 'vue';\nimport { useBotStore } from '@/stores/ftbotwrapper';\n\nexport default defineComponent({\n  name: 'TradeList',\n  components: { ActionIcon, DateTimeTZ, TradeProfit, TradeActions },\n  props: {\n    trades: { required: true, type: Array as () => Array<Trade> },\n    title: { default: 'Trades', type: String },\n    stakeCurrency: { required: false, default: '', type: String },\n    activeTrades: { default: false, type: Boolean },\n    showFilter: { default: false, type: Boolean },\n    multiBotView: { default: false, type: Boolean },\n    emptyText: { default: 'No Trades to show.', type: String },\n  },\n  setup(props) {\n    const root = getCurrentInstance();\n    const botStore = useBotStore();\n    const currentPage = ref(1);\n    const selectedItemIndex = ref();\n    const filterText = ref('');\n    const perPage = props.activeTrades ? 200 : 15;\n    const tradesTable = ref<HTMLFormElement>();\n\n    const openFields: Record<string, string | Function>[] = [{ key: 'actions' }];\n    const closedFields: Record<string, string | Function>[] = [\n      { key: 'close_timestamp', label: 'Close date' },\n      { key: 'exit_reason', label: 'Close Reason' },\n    ];\n    const formatPriceWithDecimals = (price) => {\n      return formatPrice(price, botStore.activeBot.stakeCurrencyDecimals);\n    };\n    const rows = computed(() => {\n      return props.trades.length;\n    });\n    const tableFields: Record<string, string | Function>[] = [\n      props.multiBotView ? { key: 'botName', label: 'Bot' } : {},\n      { key: 'trade_id', label: 'ID' },\n      { key: 'pair', label: 'Pair' },\n      { key: 'amount', label: 'Amount' },\n      {\n        key: 'stake_amount',\n        label: 'Stake amount',\n        formatter: (value: number) => formatPriceWithDecimals(value),\n      },\n      {\n        key: 'open_rate',\n        label: 'Open rate',\n        formatter: (value: number) => formatPrice(value),\n      },\n      {\n        key: props.activeTrades ? 'current_rate' : 'close_rate',\n        label: props.activeTrades ? 'Current rate' : 'Close rate',\n        formatter: (value: number) => formatPrice(value),\n      },\n      {\n        key: 'profit',\n        label: props.activeTrades ? 'Current profit %' : 'Profit %',\n        formatter: (value: number, key, item: Trade) => {\n          const percent = formatPercent(item.profit_ratio, 2);\n          return `${percent} ${`(${formatPriceWithDecimals(item.profit_abs)})`}`;\n        },\n      },\n      { key: 'open_timestamp', label: 'Open date' },\n      ...(props.activeTrades ? openFields : closedFields),\n    ];\n\n    const forcesellHandler = (item: Trade, ordertype: string | undefined = undefined) => {\n      root?.proxy.$bvModal\n        .msgBoxConfirm(`Really forcesell trade ${item.trade_id} (Pair ${item.pair})?`)\n        .then((value: boolean) => {\n          if (value) {\n            const payload: MultiForcesellPayload = {\n              tradeid: String(item.trade_id),\n              botId: item.botId,\n            };\n            if (ordertype) {\n              payload.ordertype = ordertype;\n            }\n            botStore\n              .forceSellMulti(payload)\n              .then((xxx) => console.log(xxx))\n              .catch((error) => console.log(error.response));\n          }\n        });\n    };\n\n    const handleContextMenuEvent = (item, index, event) => {\n      // stop browser context menu from appearing\n      if (!props.activeTrades) {\n        return;\n      }\n      event.preventDefault();\n      // log the selected item to the console\n      console.log(item);\n    };\n\n    const removeTradeHandler = (item) => {\n      console.log(item);\n      root?.proxy.$bvModal\n        .msgBoxConfirm(`Really delete trade ${item.trade_id} (Pair ${item.pair})?`)\n        .then((value: boolean) => {\n          if (value) {\n            const payload: MultiDeletePayload = {\n              tradeid: String(item.trade_id),\n              botId: item.botId,\n            };\n            botStore.deleteTradeMulti(payload).catch((error) => console.log(error.response));\n          }\n        });\n    };\n\n    const onRowClicked = (item, index) => {\n      // Only allow single selection mode!\n      if (\n        item &&\n        item.trade_id !== botStore.activeBot.detailTradeId &&\n        !tradesTable.value?.isRowSelected(index)\n      ) {\n        botStore.activeBot.setDetailTrade(item);\n      } else {\n        console.log('unsetting item');\n        botStore.activeBot.setDetailTrade(null);\n      }\n    };\n\n    const onRowSelected = () => {\n      if (botStore.activeBot.detailTradeId) {\n        const itemIndex = props.trades.findIndex(\n          (v) => v.trade_id === botStore.activeBot.detailTradeId,\n        );\n        if (itemIndex >= 0) {\n          tradesTable.value?.selectRow(itemIndex);\n        } else {\n          console.log(`Unsetting item for tradeid ${selectedItemIndex.value}`);\n          selectedItemIndex.value = undefined;\n        }\n      }\n    };\n\n    watch(\n      () => botStore.activeBot.detailTradeId,\n      (val) => {\n        const index = props.trades.findIndex((v) => v.trade_id === val);\n        // Unselect when another tradeTable is selected!\n        if (index < 0) {\n          tradesTable.value?.clearSelected();\n        }\n      },\n    );\n\n    return {\n      botStore,\n      currentPage,\n      selectedItemIndex,\n      filterText,\n      perPage,\n      tableFields,\n      rows,\n      tradesTable,\n      forcesellHandler,\n      handleContextMenuEvent,\n      removeTradeHandler,\n      onRowClicked,\n      onRowSelected,\n    };\n  },\n});\n</script>\n\n<style lang=\"scss\" scoped>\n.card-body {\n  padding: 0 0.2em;\n}\n.table-sm {\n  font-size: $fontsize-small;\n}\n.btn-xs {\n  padding: 0.1rem 0.25rem;\n  font-size: 0.75rem;\n}\n</style>\n"],"names":["_sfc_main","ref"],"mappings":"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"}