{"version":3,"file":"StrategySelect.4185aed1.js","sources":["../../src/components/ftbot/TimeRangeSelect.vue","../../src/components/ftbot/TimeframeSelect.vue","../../src/components/ftbot/StrategySelect.vue"],"sourcesContent":["<template>\n  <div>\n    <div class=\"d-flex\">\n      <b-form-group class=\"col-md-6\" label=\"Start date\" label-for=\"dp_dateFrom\">\n        <b-input-group>\n          <b-input-group-prepend>\n            <b-form-datepicker v-model=\"dateFrom\" class=\"mb-1\" button-only></b-form-datepicker>\n          </b-input-group-prepend>\n          <b-form-input\n            id=\"dp_dateFrom\"\n            v-model=\"dateFrom\"\n            type=\"text\"\n            placeholder=\"YYYY-MM-DD\"\n            autocomplete=\"off\"\n          ></b-form-input>\n        </b-input-group>\n      </b-form-group>\n      <b-form-group class=\"ml-2 col-md-6\" label=\"End date\" label-for=\"dp_dateTo\">\n        <b-input-group>\n          <b-input-group-prepend>\n            <b-form-datepicker v-model=\"dateTo\" class=\"mb-1\" button-only></b-form-datepicker>\n          </b-input-group-prepend>\n          <b-form-input\n            id=\"dp_dateTo\"\n            v-model=\"dateTo\"\n            type=\"text\"\n            placeholder=\"YYYY-MM-DD\"\n            autocomplete=\"off\"\n          ></b-form-input>\n        </b-input-group>\n      </b-form-group>\n    </div>\n    <label class=\"text-left\">\n      Timerange: <b>{{ timeRange }}</b>\n    </label>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { dateFromString, dateStringToTimeRange, timestampToDateString } from '@/shared/formatters';\nimport { defineComponent, ref, computed, onMounted, watch } from 'vue';\n\nconst now = new Date();\n\nexport default defineComponent({\n  name: 'TimeRangeSelect',\n  props: {\n    value: { required: true, type: String },\n  },\n  setup(props, { emit }) {\n    const dateFrom = ref<string>('');\n    const dateTo = ref<string>('');\n\n    const timeRange = computed(() => {\n      if (dateFrom.value !== '' || dateTo.value !== '') {\n        return `${dateStringToTimeRange(dateFrom.value)}-${dateStringToTimeRange(dateTo.value)}`;\n      }\n      return '';\n    });\n\n    const updated = () => {\n      emit('input', timeRange.value);\n    };\n\n    const updateInput = () => {\n      const tr = props.value.split('-');\n      if (tr[0]) {\n        dateFrom.value = timestampToDateString(dateFromString(tr[0], 'yyyyMMdd'));\n      }\n      if (tr.length > 1 && tr[1]) {\n        dateTo.value = timestampToDateString(dateFromString(tr[1], 'yyyyMMdd'));\n      }\n      updated();\n    };\n\n    watch(\n      () => timeRange.value,\n      () => updated(),\n    );\n\n    onMounted(() => {\n      if (!props.value) {\n        dateFrom.value = timestampToDateString(new Date(now.getFullYear(), now.getMonth() - 1, 1));\n      } else {\n        updateInput();\n      }\n      emit('input', timeRange.value);\n    });\n\n    return {\n      dateFrom,\n      dateTo,\n      timeRange,\n      updated,\n    };\n  },\n});\n</script>\n\n<style scoped></style>\n","<template>\n  <b-form-select\n    v-model=\"selectedTimeframe\"\n    placeholder=\"Use strategy default\"\n    :options=\"availableTimeframes\"\n    @change=\"emitSelectedTimeframe\"\n  ></b-form-select>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, computed, ref } from 'vue';\n\nexport default defineComponent({\n  name: 'TimefameSelect',\n  props: {\n    value: { default: '', type: String },\n    belowTimeframe: { required: false, default: '', type: String },\n  },\n  emits: ['input'],\n  setup(props, { emit }) {\n    const selectedTimeframe = ref('');\n    // The below list must always remain sorted correctly!\n    const availableTimeframesBase = [\n      // Placeholder value\n      { value: '', text: 'Use strategy default' },\n      '1m',\n      '3m',\n      '5m',\n      '15m',\n      '30m',\n      '1h',\n      '2h',\n      '4h',\n      '6h',\n      '8h',\n      '12h',\n      '1d',\n      '3d',\n      '1w',\n      '2w',\n      '1M',\n      '1y',\n    ];\n\n    const availableTimeframes = computed(() => {\n      if (!props.belowTimeframe) {\n        return availableTimeframesBase;\n      }\n      const idx = availableTimeframesBase.findIndex((v) => v === props.belowTimeframe);\n\n      return [...availableTimeframesBase].splice(0, idx);\n    });\n\n    const emitSelectedTimeframe = () => {\n      emit('input', selectedTimeframe.value);\n    };\n\n    return {\n      availableTimeframesBase,\n      availableTimeframes,\n      emitSelectedTimeframe,\n      selectedTimeframe,\n    };\n  },\n});\n</script>\n\n<style scoped></style>\n","<template>\n  <div>\n    <div class=\"w-100 d-flex\">\n      <b-form-select\n        id=\"strategy-select\"\n        v-model=\"locStrategy\"\n        :options=\"botStore.activeBot.strategyList\"\n      >\n      </b-form-select>\n      <div class=\"ml-2\">\n        <b-button @click=\"botStore.activeBot.getStrategyList\">&#x21bb;</b-button>\n      </div>\n    </div>\n\n    <textarea\n      v-if=\"showDetails && botStore.activeBot.strategy\"\n      v-model=\"strategyCode\"\n      class=\"w-100 h-100\"\n    ></textarea>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { useBotStore } from '@/stores/ftbotwrapper';\nimport { defineComponent, computed, onMounted } from 'vue';\n\nexport default defineComponent({\n  name: 'StrategySelect',\n  props: {\n    value: { type: String, required: true },\n    showDetails: { default: false, required: false, type: Boolean },\n  },\n  emits: ['input'],\n  setup(props, { emit }) {\n    const botStore = useBotStore();\n\n    const strategyCode = computed((): string => botStore.activeBot.strategy?.code);\n    const locStrategy = computed({\n      get() {\n        return props.value;\n      },\n      set(strategy: string) {\n        botStore.activeBot.getStrategy(strategy);\n        emit('input', strategy);\n      },\n    });\n\n    onMounted(() => {\n      if (botStore.activeBot.strategyList.length === 0) {\n        botStore.activeBot.getStrategyList();\n      }\n    });\n    return {\n      botStore,\n      strategyCode,\n      locStrategy,\n    };\n  },\n});\n</script>\n\n<style></style>\n"],"names":["ref"],"mappings":"kGA0CA,KAAA,GAAA,GAAA,MAEA,GAAA,GAAA,EAAA,CACA,KAAA,kBACA,MAAA,CACA,MAAA,CAAA,SAAA,GAAA,KAAA,MAAA,CACA,EACA,MAAA,EAAA,CAAA,QAAA,CACA,KAAA,GAAAA,EAAA,EAAA,EACA,EAAAA,EAAA,EAAA,EAEA,EAAA,EAAA,IACA,EAAA,QAAA,IAAA,EAAA,QAAA,GACA,GAAA,EAAA,EAAA,KAAA,KAAA,EAAA,EAAA,KAAA,IAEA,EACA,EAEA,EAAA,IAAA,CACA,EAAA,QAAA,EAAA,KAAA,CAAA,EAGA,EAAA,IAAA,CACA,KAAA,GAAA,EAAA,MAAA,MAAA,GAAA,EACA,AAAA,EAAA,IACA,GAAA,MAAA,EAAA,EAAA,EAAA,GAAA,UAAA,CAAA,GAEA,EAAA,OAAA,GAAA,EAAA,IACA,GAAA,MAAA,EAAA,EAAA,EAAA,GAAA,UAAA,CAAA,GAEA,GAAA,EAGA,SACA,IAAA,EAAA,MACA,IAAA,EACA,CAAA,EAEA,EAAA,IAAA,CACA,AAAA,EAAA,MAGA,IAFA,EAAA,MAAA,EAAA,GAAA,MAAA,EAAA,cAAA,EAAA,SAAA,EAAA,EAAA,CAAA,CAAA,EAIA,EAAA,QAAA,EAAA,KAAA,CAAA,CACA,EAEA,CACA,WACA,SACA,YACA,SAAA,CAEA,CACA,CAAA,+sCCpFA,EAAA,EAAA,CACA,KAAA,iBACA,MAAA,CACA,MAAA,CAAA,QAAA,GAAA,KAAA,MAAA,EACA,eAAA,CAAA,SAAA,GAAA,QAAA,GAAA,KAAA,MAAA,CACA,EACA,MAAA,CAAA,OAAA,EACA,MAAA,EAAA,CAAA,QAAA,CACA,KAAA,GAAAA,EAAA,EAAA,EAEA,EAAA,CAEA,CAAA,MAAA,GAAA,KAAA,sBAAA,EACA,KACA,KACA,KACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,MACA,KACA,KACA,KACA,KACA,KACA,IAAA,EAGA,EAAA,EAAA,IAAA,CACA,GAAA,CAAA,EAAA,eACA,MAAA,GAEA,KAAA,GAAA,EAAA,UAAA,AAAA,GAAA,IAAA,EAAA,cAAA,EAEA,MAAA,CAAA,GAAA,CAAA,EAAA,OAAA,EAAA,CAAA,CAAA,CACA,EAMA,MAAA,CACA,0BACA,sBACA,sBAPA,IAAA,CACA,EAAA,QAAA,EAAA,KAAA,CAAA,EAOA,mBAAA,CAEA,CACA,CAAA,+WCtCA,EAAA,EAAA,CACA,KAAA,iBACA,MAAA,CACA,MAAA,CAAA,KAAA,OAAA,SAAA,EAAA,EACA,YAAA,CAAA,QAAA,GAAA,SAAA,GAAA,KAAA,OAAA,CACA,EACA,MAAA,CAAA,OAAA,EACA,MAAA,EAAA,CAAA,QAAA,CACA,KAAA,GAAA,IAEA,EAAA,EAAA,IAAA,OAAA,WAAA,UAAA,WAAA,cAAA,KAAA,EACA,EAAA,EAAA,CACA,KAAA,CACA,MAAA,GAAA,KACA,EACA,IAAA,EAAA,CACA,EAAA,UAAA,YAAA,CAAA,EACA,EAAA,QAAA,CAAA,CACA,CAAA,CACA,EAEA,SAAA,IAAA,CACA,AAAA,EAAA,UAAA,aAAA,SAAA,GACA,EAAA,UAAA,iBACA,CACA,EACA,CACA,WACA,eACA,aAAA,CAEA,CACA,CAAA"}